def timerstart():
	global timerstate
	timerstate=True
	
def update_timertime():
    if (timerstate == True):
        global timer
        timer[1] -= 1
        
        if (timer[1] == 0):
            timer[0] -= 1
            timer[1] = 60
        if timer[0]==0 and timer[1]==0:
        	print("1")
        # We create our time string here
        timeString = pattern.format(timer[0], timer[1])
        # Update the timeText Label box with the current time
        timeText.configure(text=timeString)
        # Call the update_timeText() function after 1 centisecond
    root.after(1000, update_timertime)

# To start the kitchen timer
def funtimer():
	
	timermin=int(input())
	timersec=int(input())
	global timerstate
	timerstate = False
	global root
	root = tk.Tk()
	root.wm_title('Timer')
	global timer
	timer = [timermin,timersec]
	global pattern
	# The format is padding all the 
	pattern = '{0:02d}:{1:02d}'
	global timeText
	# Create a timeText Label (a text box)
	timeText = tk.Label(root, text=str(timermin)+':'+str(timersec), font=("Helvetica", 150))
	timeText.pack()

	startButton = tk.Button(root, text='Start', command=timerstart)
	startButton.pack()
	
	update_timertime()
	root.mainloop()
funtimer()
